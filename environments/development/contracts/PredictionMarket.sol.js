// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"curAdmin","type":"address"}],"name":"removeAdmin","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"Poll","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"question","type":"string"}],"name":"setNewPoll","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[],"name":"kill","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"newAdmin","type":"address"}],"name":"addAdmin","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"voteAgainst","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"changeOwner","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"closePoll","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[],"name":"voteFor","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"anonymous":false,"inputs":[],"name":"PollClosed","type":"event"},{"anonymous":false,"inputs":[],"name":"PollOpened","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"votesFor","type":"uint256"}],"name":"VotedFor","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"votesAgainst","type":"uint256"}],"name":"VotedAgainst","type":"event"}],
    binary: "606060405260008054600160a060020a031916331790556106b9806100246000396000f3606060405236156100775760e060020a60003504631785f53c811461007f57806336274669146100ac5780633f039156146100b657806341c0e1b51461012257806370480275146101435780639f396cff14610170578063a6f9dae114610247578063ed8c2aed1461026a578063ffaa360814610294575b6102a1610002565b6102a1600435600160a060020a03331660009081526001602052604090205460ff1615156102b757610002565b6102a16000600255565b6040805160206004803580820135601f81018490048402850184019095528484526102a3949193602493909291840191908190840183828082843750949650505050505050600160a060020a03331660009081526001602052604081205460ff1615156102d857610002565b6102a360008054600160a060020a0390811633919091161461037957610002565b6102a1600435600160a060020a03331660009081526001602052604090205460ff16151561038757610002565b6102a360006103ae5b6040805160a0810182526000608082018181528252602082018190529181018290526060810191909152600254600380549091908110156100025760009182526005027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019050604080518254602060026001831615610100026000190190921691909104601f8101829004909102820160a090810190935260808201818152919392849291849184018282801561063c5780601f106106115761010080835404028352916020019161063c565b6102a1600435600054600160a060020a0390811633919091161461049057610002565b6102a3600160a060020a03331660009081526001602052604081205460ff1615156104b257610002565b6102a3600061050e610179565b005b604080519115158252519081900360200190f35b600160a060020a03166000908152600160205260409020805460ff19169055565b6102e0610179565b60600151156102ee57610002565b61032d826040805160a0810182526000608082018181528252602082018190529181018290526060810191909152600280546001019055610672610179565b6040517fd286aab26c83aacb04720da27f087833c19413501027f7db4200d506aca2c78b90600090a1506001919050565b60408051918101518252519081900360200190a15060015b90565b600054600160a060020a0316ff5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b6060015115156103bd57610002565b600254600380549091908110156100025733600160a060020a0316600090815260059190910260008051602061069983398151915201602052604090205460ff1615905061040a57610002565b60025460038054600192908110156100025733600160a060020a031660009081526005919091026000805160206106998339815191520160205260409020805460ff19169092179091555061045d610179565b604001805160010190527feea6bede3f2b3fe8e00d80ca85bbf1187d69f1fea827250867c81e6a667d66d861035e610179565b6000805473ffffffffffffffffffffffffffffffffffffffff19168217905550565b6104ba610179565b6060015115156104c957610002565b60006104d3610179565b901515606091909101526040517f5e24da2538f801728822124bb8a94fd11c332883ca34345e44ddf7f79587cef990600090a1506001610376565b60600151151561051d57610002565b600254600380549091908110156100025733600160a060020a0316600090815260059190910260008051602061069983398151915201602052604090205460ff1615905061056a57610002565b60025460038054600192908110156100025733600160a060020a031660009081526005919091026000805160206106998339815191520160205260409020805460ff1916909217909155506105bd610179565b602001805160010190527ff87d0c55fbf9a35874303801d9144d04e3d96d550a33618e0121ef792c244db76105f0610179565b602001516040518082815260200191505060405180910390a1506001610376565b820191906000526020600020905b81548152906001019060200180831161061f57829003601f168201915b505050918352505060018201546020820152600282015460408201526003919091015460ff161515606091909101529050610376565b5050604080516080810182529182526000602083018190529082015260016060919091015256c2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f",
    unlinked_binary: "606060405260008054600160a060020a031916331790556106b9806100246000396000f3606060405236156100775760e060020a60003504631785f53c811461007f57806336274669146100ac5780633f039156146100b657806341c0e1b51461012257806370480275146101435780639f396cff14610170578063a6f9dae114610247578063ed8c2aed1461026a578063ffaa360814610294575b6102a1610002565b6102a1600435600160a060020a03331660009081526001602052604090205460ff1615156102b757610002565b6102a16000600255565b6040805160206004803580820135601f81018490048402850184019095528484526102a3949193602493909291840191908190840183828082843750949650505050505050600160a060020a03331660009081526001602052604081205460ff1615156102d857610002565b6102a360008054600160a060020a0390811633919091161461037957610002565b6102a1600435600160a060020a03331660009081526001602052604090205460ff16151561038757610002565b6102a360006103ae5b6040805160a0810182526000608082018181528252602082018190529181018290526060810191909152600254600380549091908110156100025760009182526005027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b019050604080518254602060026001831615610100026000190190921691909104601f8101829004909102820160a090810190935260808201818152919392849291849184018282801561063c5780601f106106115761010080835404028352916020019161063c565b6102a1600435600054600160a060020a0390811633919091161461049057610002565b6102a3600160a060020a03331660009081526001602052604081205460ff1615156104b257610002565b6102a3600061050e610179565b005b604080519115158252519081900360200190f35b600160a060020a03166000908152600160205260409020805460ff19169055565b6102e0610179565b60600151156102ee57610002565b61032d826040805160a0810182526000608082018181528252602082018190529181018290526060810191909152600280546001019055610672610179565b6040517fd286aab26c83aacb04720da27f087833c19413501027f7db4200d506aca2c78b90600090a1506001919050565b60408051918101518252519081900360200190a15060015b90565b600054600160a060020a0316ff5b600160a060020a03166000908152600160208190526040909120805460ff19169091179055565b6060015115156103bd57610002565b600254600380549091908110156100025733600160a060020a0316600090815260059190910260008051602061069983398151915201602052604090205460ff1615905061040a57610002565b60025460038054600192908110156100025733600160a060020a031660009081526005919091026000805160206106998339815191520160205260409020805460ff19169092179091555061045d610179565b604001805160010190527feea6bede3f2b3fe8e00d80ca85bbf1187d69f1fea827250867c81e6a667d66d861035e610179565b6000805473ffffffffffffffffffffffffffffffffffffffff19168217905550565b6104ba610179565b6060015115156104c957610002565b60006104d3610179565b901515606091909101526040517f5e24da2538f801728822124bb8a94fd11c332883ca34345e44ddf7f79587cef990600090a1506001610376565b60600151151561051d57610002565b600254600380549091908110156100025733600160a060020a0316600090815260059190910260008051602061069983398151915201602052604090205460ff1615905061056a57610002565b60025460038054600192908110156100025733600160a060020a031660009081526005919091026000805160206106998339815191520160205260409020805460ff1916909217909155506105bd610179565b602001805160010190527ff87d0c55fbf9a35874303801d9144d04e3d96d550a33618e0121ef792c244db76105f0610179565b602001516040518082815260200191505060405180910390a1506001610376565b820191906000526020600020905b81548152906001019060200180831161061f57829003601f168201915b505050918352505060018201546020820152600282015460408201526003919091015460ff161515606091909101529050610376565b5050604080516080810182529182526000602083018190529082015260016060919091015256c2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f",
    address: "",
    generated_with: "2.0.9",
    contract_name: "PredictionMarket"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("PredictionMarket error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("PredictionMarket error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("PredictionMarket error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("PredictionMarket error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.PredictionMarket = Contract;
  }

})();
